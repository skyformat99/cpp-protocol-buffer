// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: product.proto

#ifndef PROTOBUF_product_2eproto__INCLUDED
#define PROTOBUF_product_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace RFQ {
class ProductRequest;
class ProductRequestDefaultTypeInternal;
extern ProductRequestDefaultTypeInternal _ProductRequest_default_instance_;
class ProductResponse;
class ProductResponseDefaultTypeInternal;
extern ProductResponseDefaultTypeInternal _ProductResponse_default_instance_;
}  // namespace RFQ

namespace RFQ {

namespace protobuf_product_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_product_2eproto

// ===================================================================

class ProductRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RFQ.ProductRequest) */ {
 public:
  ProductRequest();
  virtual ~ProductRequest();

  ProductRequest(const ProductRequest& from);

  inline ProductRequest& operator=(const ProductRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductRequest(ProductRequest&& from) noexcept
    : ProductRequest() {
    *this = ::std::move(from);
  }

  inline ProductRequest& operator=(ProductRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductRequest& default_instance();

  static inline const ProductRequest* internal_default_instance() {
    return reinterpret_cast<const ProductRequest*>(
               &_ProductRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ProductRequest* other);
  friend void swap(ProductRequest& a, ProductRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductRequest& from);
  void MergeFrom(const ProductRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string product_category = 4;
  bool has_product_category() const;
  void clear_product_category();
  static const int kProductCategoryFieldNumber = 4;
  const ::std::string& product_category() const;
  void set_product_category(const ::std::string& value);
  #if LANG_CXX11
  void set_product_category(::std::string&& value);
  #endif
  void set_product_category(const char* value);
  void set_product_category(const char* value, size_t size);
  ::std::string* mutable_product_category();
  ::std::string* release_product_category();
  void set_allocated_product_category(::std::string* product_category);

  // optional int32 rfq_id = 1;
  bool has_rfq_id() const;
  void clear_rfq_id();
  static const int kRfqIdFieldNumber = 1;
  ::google::protobuf::int32 rfq_id() const;
  void set_rfq_id(::google::protobuf::int32 value);

  // optional int32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::int32 account_id() const;
  void set_account_id(::google::protobuf::int32 value);

  // optional int32 product_number = 3;
  bool has_product_number() const;
  void clear_product_number();
  static const int kProductNumberFieldNumber = 3;
  ::google::protobuf::int32 product_number() const;
  void set_product_number(::google::protobuf::int32 value);

  // optional int32 quantity = 5;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 5;
  ::google::protobuf::int32 quantity() const;
  void set_quantity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RFQ.ProductRequest)
 private:
  void set_has_rfq_id();
  void clear_has_rfq_id();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_product_number();
  void clear_has_product_number();
  void set_has_product_category();
  void clear_has_product_category();
  void set_has_quantity();
  void clear_has_quantity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr product_category_;
  ::google::protobuf::int32 rfq_id_;
  ::google::protobuf::int32 account_id_;
  ::google::protobuf::int32 product_number_;
  ::google::protobuf::int32 quantity_;
  friend struct protobuf_product_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProductResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RFQ.ProductResponse) */ {
 public:
  ProductResponse();
  virtual ~ProductResponse();

  ProductResponse(const ProductResponse& from);

  inline ProductResponse& operator=(const ProductResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProductResponse(ProductResponse&& from) noexcept
    : ProductResponse() {
    *this = ::std::move(from);
  }

  inline ProductResponse& operator=(ProductResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProductResponse& default_instance();

  static inline const ProductResponse* internal_default_instance() {
    return reinterpret_cast<const ProductResponse*>(
               &_ProductResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ProductResponse* other);
  friend void swap(ProductResponse& a, ProductResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProductResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ProductResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProductResponse& from);
  void MergeFrom(const ProductResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProductResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string price_validation_period = 2;
  bool has_price_validation_period() const;
  void clear_price_validation_period();
  static const int kPriceValidationPeriodFieldNumber = 2;
  const ::std::string& price_validation_period() const;
  void set_price_validation_period(const ::std::string& value);
  #if LANG_CXX11
  void set_price_validation_period(::std::string&& value);
  #endif
  void set_price_validation_period(const char* value);
  void set_price_validation_period(const char* value, size_t size);
  ::std::string* mutable_price_validation_period();
  ::std::string* release_price_validation_period();
  void set_allocated_price_validation_period(::std::string* price_validation_period);

  // optional float unit_price = 1;
  bool has_unit_price() const;
  void clear_unit_price();
  static const int kUnitPriceFieldNumber = 1;
  float unit_price() const;
  void set_unit_price(float value);

  // @@protoc_insertion_point(class_scope:RFQ.ProductResponse)
 private:
  void set_has_unit_price();
  void clear_has_unit_price();
  void set_has_price_validation_period();
  void clear_has_price_validation_period();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr price_validation_period_;
  float unit_price_;
  friend struct protobuf_product_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProductRequest

// optional int32 rfq_id = 1;
inline bool ProductRequest::has_rfq_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductRequest::set_has_rfq_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductRequest::clear_has_rfq_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductRequest::clear_rfq_id() {
  rfq_id_ = 0;
  clear_has_rfq_id();
}
inline ::google::protobuf::int32 ProductRequest::rfq_id() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductRequest.rfq_id)
  return rfq_id_;
}
inline void ProductRequest::set_rfq_id(::google::protobuf::int32 value) {
  set_has_rfq_id();
  rfq_id_ = value;
  // @@protoc_insertion_point(field_set:RFQ.ProductRequest.rfq_id)
}

// optional int32 account_id = 2;
inline bool ProductRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProductRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProductRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProductRequest::clear_account_id() {
  account_id_ = 0;
  clear_has_account_id();
}
inline ::google::protobuf::int32 ProductRequest::account_id() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductRequest.account_id)
  return account_id_;
}
inline void ProductRequest::set_account_id(::google::protobuf::int32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:RFQ.ProductRequest.account_id)
}

// optional int32 product_number = 3;
inline bool ProductRequest::has_product_number() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProductRequest::set_has_product_number() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProductRequest::clear_has_product_number() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProductRequest::clear_product_number() {
  product_number_ = 0;
  clear_has_product_number();
}
inline ::google::protobuf::int32 ProductRequest::product_number() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductRequest.product_number)
  return product_number_;
}
inline void ProductRequest::set_product_number(::google::protobuf::int32 value) {
  set_has_product_number();
  product_number_ = value;
  // @@protoc_insertion_point(field_set:RFQ.ProductRequest.product_number)
}

// optional string product_category = 4;
inline bool ProductRequest::has_product_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductRequest::set_has_product_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductRequest::clear_has_product_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductRequest::clear_product_category() {
  product_category_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product_category();
}
inline const ::std::string& ProductRequest::product_category() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductRequest.product_category)
  return product_category_.GetNoArena();
}
inline void ProductRequest::set_product_category(const ::std::string& value) {
  set_has_product_category();
  product_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RFQ.ProductRequest.product_category)
}
#if LANG_CXX11
inline void ProductRequest::set_product_category(::std::string&& value) {
  set_has_product_category();
  product_category_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RFQ.ProductRequest.product_category)
}
#endif
inline void ProductRequest::set_product_category(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product_category();
  product_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RFQ.ProductRequest.product_category)
}
inline void ProductRequest::set_product_category(const char* value, size_t size) {
  set_has_product_category();
  product_category_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RFQ.ProductRequest.product_category)
}
inline ::std::string* ProductRequest::mutable_product_category() {
  set_has_product_category();
  // @@protoc_insertion_point(field_mutable:RFQ.ProductRequest.product_category)
  return product_category_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductRequest::release_product_category() {
  // @@protoc_insertion_point(field_release:RFQ.ProductRequest.product_category)
  clear_has_product_category();
  return product_category_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductRequest::set_allocated_product_category(::std::string* product_category) {
  if (product_category != NULL) {
    set_has_product_category();
  } else {
    clear_has_product_category();
  }
  product_category_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_category);
  // @@protoc_insertion_point(field_set_allocated:RFQ.ProductRequest.product_category)
}

// optional int32 quantity = 5;
inline bool ProductRequest::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ProductRequest::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ProductRequest::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ProductRequest::clear_quantity() {
  quantity_ = 0;
  clear_has_quantity();
}
inline ::google::protobuf::int32 ProductRequest::quantity() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductRequest.quantity)
  return quantity_;
}
inline void ProductRequest::set_quantity(::google::protobuf::int32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:RFQ.ProductRequest.quantity)
}

// -------------------------------------------------------------------

// ProductResponse

// optional float unit_price = 1;
inline bool ProductResponse::has_unit_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProductResponse::set_has_unit_price() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProductResponse::clear_has_unit_price() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProductResponse::clear_unit_price() {
  unit_price_ = 0;
  clear_has_unit_price();
}
inline float ProductResponse::unit_price() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductResponse.unit_price)
  return unit_price_;
}
inline void ProductResponse::set_unit_price(float value) {
  set_has_unit_price();
  unit_price_ = value;
  // @@protoc_insertion_point(field_set:RFQ.ProductResponse.unit_price)
}

// optional string price_validation_period = 2;
inline bool ProductResponse::has_price_validation_period() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProductResponse::set_has_price_validation_period() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProductResponse::clear_has_price_validation_period() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProductResponse::clear_price_validation_period() {
  price_validation_period_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_price_validation_period();
}
inline const ::std::string& ProductResponse::price_validation_period() const {
  // @@protoc_insertion_point(field_get:RFQ.ProductResponse.price_validation_period)
  return price_validation_period_.GetNoArena();
}
inline void ProductResponse::set_price_validation_period(const ::std::string& value) {
  set_has_price_validation_period();
  price_validation_period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:RFQ.ProductResponse.price_validation_period)
}
#if LANG_CXX11
inline void ProductResponse::set_price_validation_period(::std::string&& value) {
  set_has_price_validation_period();
  price_validation_period_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:RFQ.ProductResponse.price_validation_period)
}
#endif
inline void ProductResponse::set_price_validation_period(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_price_validation_period();
  price_validation_period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:RFQ.ProductResponse.price_validation_period)
}
inline void ProductResponse::set_price_validation_period(const char* value, size_t size) {
  set_has_price_validation_period();
  price_validation_period_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:RFQ.ProductResponse.price_validation_period)
}
inline ::std::string* ProductResponse::mutable_price_validation_period() {
  set_has_price_validation_period();
  // @@protoc_insertion_point(field_mutable:RFQ.ProductResponse.price_validation_period)
  return price_validation_period_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProductResponse::release_price_validation_period() {
  // @@protoc_insertion_point(field_release:RFQ.ProductResponse.price_validation_period)
  clear_has_price_validation_period();
  return price_validation_period_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProductResponse::set_allocated_price_validation_period(::std::string* price_validation_period) {
  if (price_validation_period != NULL) {
    set_has_price_validation_period();
  } else {
    clear_has_price_validation_period();
  }
  price_validation_period_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price_validation_period);
  // @@protoc_insertion_point(field_set_allocated:RFQ.ProductResponse.price_validation_period)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace RFQ

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_product_2eproto__INCLUDED
